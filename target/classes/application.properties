#For docker container
#spring.datasource.url=jdbc:postgresql://${DB_CONNECTION_IP}:5432/my-project-db
#spring.datasource.username=mms
#spring.datasource.password=mms
#spring.datasource.driverClassName=org.postgresql.Driver

#Local db connection
# spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
# spring.datasource.username=postgres
# spring.datasource.password=postgres

#Spring cloud vault connection
spring.cloud.vault.kv.application-name=ecommerce
spring.cloud.vault.token=hvs.I2pYzIWfFX7gLDWx7ty1bcnU
spring.cloud.vault.scheme=http
spring.config.import= vault://
spring.cloud.vault.kv.enabled=true

# Hibernate properties
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
security.jwt.secret-key=${JWT_SECRET:VGhpcyBpcyBteSBzaG9wcGluZyB3ZWIgYXBsaWNhdGlvbg==}
# 10h in millisecond
security.jwt.expiration-time=36000000

springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

#file.upload-dir=db_data:/var/lib/images
file.upload-dir=C:\D DISC\IdrakProjects\TestFile

spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
spring.servlet.multipart.enabled=true

#Liquibase
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml
spring.liquibase.enabled=true